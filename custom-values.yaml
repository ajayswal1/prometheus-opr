apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: frontend-app
  labels:
    app: frontend-app
    release: prom 
spec:
  namespaceSelector:
    any: true
selector:
  matchLabels:
    app: frontens-app
endpoints:
- port: web
  interval: 10s    

# Depending on which DNS solution you have installed in your cluster enable the right exporter.
coreDns:
  enabled: false
kubeDns:
  enabled: true
alertmanager:
  alertmanagerSpec:
   storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ibmc-file-retain-bronze
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi

prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        speci:
          storageClassName: ibmc-file-retain-bronze
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
securityContext:
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 0

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - peometheus.twc-oap-cluster.us-south.containers.appdomain.cloud
    tls:
      - secretName: twc-oap-cluster
      hosts:
         - peometheus.twc-oap-cluster.us-south.containers.appdomain.cloud  

grafana:
  adminPassword: admin
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - monitoring.twc-oap-cluster.us-south.containers.appdomain.cloud
    tls:
     - secretName: twc-oap-cluster #ibmcloud ks cluster get --cluster <cluster_name_or_ID> | grep Ingress
     hosts:
        - monitoring.twc-oap-cluster.us-south.containers.appdomain.cloud
persistence:
  enabled: true
  accessModes: ["ReadWriteOnce"]




